package paixnidimnhmhs;

import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Mixalhs
 */
public class Frame extends javax.swing.JFrame {

    public static Cards cards = new Cards();
    public static SinglePlayerGame single = new SinglePlayerGame();
    public static MultiPlayerGame multi = new MultiPlayerGame();
    public static BattleGame battle = new BattleGame();
    public static List<String> Players = new ArrayList<>();
    /**
     * Creates new form Frame
     */
    public static int mode=0;
    public static int modeType=0;
    public static int numOfCards=0;
    public static boolean swap=false;
    public static boolean random=false;
    public static boolean playAgain=false;
    
    public Frame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.botPanel.setVisible(false);
        this.extraMenus.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botPanel = new javax.swing.JPanel();
        movesLabel = new javax.swing.JLabel();
        countMovesLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        playersPanel = new javax.swing.JPanel();
        player1Label = new javax.swing.JLabel();
        player1Count = new javax.swing.JLabel();
        player1Type = new javax.swing.JLabel();
        player1Correct = new javax.swing.JLabel();
        player2Label = new javax.swing.JLabel();
        player2Type = new javax.swing.JLabel();
        player2Correct = new javax.swing.JLabel();
        player2Count = new javax.swing.JLabel();
        player3Label = new javax.swing.JLabel();
        player3Type = new javax.swing.JLabel();
        player3Correct = new javax.swing.JLabel();
        player3Count = new javax.swing.JLabel();
        player4Label = new javax.swing.JLabel();
        player4Type = new javax.swing.JLabel();
        player4Correct = new javax.swing.JLabel();
        player4Count = new javax.swing.JLabel();
        nextPlayerButton = new javax.swing.JButton();
        cardsPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        SMBCombobox = new javax.swing.JComboBox<>();
        GameCombobox = new javax.swing.JComboBox<>();
        randomCheckbox = new javax.swing.JCheckBox();
        swapCheckbox = new javax.swing.JCheckBox();
        orderCheckbox = new javax.swing.JCheckBox();
        extraMenus = new javax.swing.JPanel();
        playAgainCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        player1ComboBox = new javax.swing.JComboBox<>();
        player2ComboBox = new javax.swing.JComboBox<>();
        player3ComboBox = new javax.swing.JComboBox<>();
        player4ComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Paixnidi Mnhmhs");
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(1000, 700));

        botPanel.setMaximumSize(new java.awt.Dimension(32767, 40));
        botPanel.setMinimumSize(new java.awt.Dimension(0, 40));
        botPanel.setPreferredSize(new java.awt.Dimension(620, 40));

        movesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        movesLabel.setText("Moves:");

        countMovesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        countMovesLabel.setText("0");

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        player1Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player1Label.setText("Player 1:");

        player1Count.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player1Count.setText("0");

        player1Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player1Type.setText("Human");

        player1Correct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player1Correct.setText("Correct:");

        player2Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player2Label.setText("Player 2:");

        player2Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player2Type.setText("Human");

        player2Correct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player2Correct.setText("Correct:");

        player2Count.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player2Count.setText("0");

        player3Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player3Label.setText("Player 3:");

        player3Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player3Type.setText("Human");

        player3Correct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player3Correct.setText("Correct:");

        player3Count.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player3Count.setText("0");

        player4Label.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player4Label.setText("Player 4:");

        player4Type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player4Type.setText("Human");

        player4Correct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player4Correct.setText("Correct:");

        player4Count.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        player4Count.setText("0");

        nextPlayerButton.setText("Next Player");
        nextPlayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPlayerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playersPanelLayout = new javax.swing.GroupLayout(playersPanel);
        playersPanel.setLayout(playersPanelLayout);
        playersPanelLayout.setHorizontalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nextPlayerButton)
                .addGap(31, 31, 31)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(player1Label)
                    .addComponent(player1Correct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player1Count)
                    .addComponent(player1Type))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(player2Label)
                    .addComponent(player2Correct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player2Count)
                    .addComponent(player2Type))
                .addGap(52, 52, 52)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(player3Label)
                    .addComponent(player3Correct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player3Count)
                    .addComponent(player3Type))
                .addGap(37, 37, 37)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(player4Label)
                    .addComponent(player4Correct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player4Count)
                    .addComponent(player4Type))
                .addGap(86, 86, 86))
        );
        playersPanelLayout.setVerticalGroup(
            playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player1Type))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player1Count)
                            .addComponent(player1Correct)))
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player2Type))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player2Count)
                            .addComponent(player2Correct)))
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player3Type))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player3Count)
                            .addComponent(player3Correct)))
                    .addGroup(playersPanelLayout.createSequentialGroup()
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player4Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(player4Type))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(player4Count)
                            .addComponent(player4Correct))))
                .addContainerGap())
            .addGroup(playersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nextPlayerButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout botPanelLayout = new javax.swing.GroupLayout(botPanel);
        botPanel.setLayout(botPanelLayout);
        botPanelLayout.setHorizontalGroup(
            botPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(movesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countMovesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        botPanelLayout.setVerticalGroup(
            botPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(countMovesLabel)
                .addComponent(movesLabel))
            .addComponent(playersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        cardsPanel.setLayout(new java.awt.GridLayout(1, 0));

        startButton.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        SMBCombobox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SMBCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Player", "Multi Player", "Battle" }));
        SMBCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SMBComboboxActionPerformed(evt);
            }
        });

        GameCombobox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        GameCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal Game", "Double Game", "Trio Game", "Quartet Game" }));
        GameCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GameComboboxActionPerformed(evt);
            }
        });

        randomCheckbox.setText("Show cards at random positions");

        swapCheckbox.setText("Swap cards once opened");

        orderCheckbox.setText("Open cards in an order");

        playAgainCheckBox.setText("Do not play again after winning a round");

        jLabel1.setText("Players:");

        player1ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Human", "Goldenfish", "Kangouro", "Elephant" }));

        player2ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Human", "Goldenfish", "Kangouro", "Elephant" }));

        player3ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Human", "Goldenfish", "Kangouro", "Elephant" }));

        player4ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Human", "Goldenfish", "Kangouro", "Elephant" }));

        javax.swing.GroupLayout extraMenusLayout = new javax.swing.GroupLayout(extraMenus);
        extraMenus.setLayout(extraMenusLayout);
        extraMenusLayout.setHorizontalGroup(
            extraMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playAgainCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
            .addGroup(extraMenusLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(extraMenusLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(extraMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        extraMenusLayout.setVerticalGroup(
            extraMenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extraMenusLayout.createSequentialGroup()
                .addComponent(playAgainCheckBox)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(player1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(player2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(player3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(player4ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap(336, Short.MAX_VALUE)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SMBCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(randomCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addComponent(swapCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(GameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(orderCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(extraMenus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(347, 347, 347))))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(SMBCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(GameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(swapCheckbox)
                .addGap(18, 18, 18)
                .addComponent(randomCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(orderCheckbox)
                .addGap(18, 18, 18)
                .addComponent(extraMenus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        cardsPanel.add(menuPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cardsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        mode=SMBCombobox.getSelectedIndex();
        
        switch(mode)
        {
            case 1://multiplayer
            case 2://battle
            {
                if(this.player1ComboBox.getSelectedIndex()!=0)
                    Players.add(String.valueOf(player1ComboBox.getSelectedItem()));
                if(this.player2ComboBox.getSelectedIndex()!=0)
                    Players.add(String.valueOf(player2ComboBox.getSelectedItem()));
                if(this.player3ComboBox.getSelectedIndex()!=0)
                    Players.add(String.valueOf(player3ComboBox.getSelectedItem()));
                if(this.player4ComboBox.getSelectedIndex()!=0)
                    Players.add(String.valueOf(player4ComboBox.getSelectedItem()));
                
                if(Players.size()<2)
                {
                    Players.clear();
                    JOptionPane.showMessageDialog(null,"You need at least two players.");
                    return;
                }               
                break;
            }
        }
        
        modeType=GameCombobox.getSelectedIndex();
        random=randomCheckbox.isSelected();
        playAgain=playAgainCheckBox.isSelected();
        
        switch(GameCombobox.getSelectedIndex())
        {
            case 0:
            {
                numOfCards=24;
                swap=this.swapCheckbox.isSelected();
                break;
            }
            case 1:
            {
                numOfCards=48;
                swap=this.swapCheckbox.isSelected();
                break;
            }
            case 2:
            {
                numOfCards=36;
                swap=false;
                break;
            }
            case 3:
            {
                numOfCards=48;
                swap=false;
                break;
            }            
        }
        
        this.cardsPanel.remove(menuPanel);
        this.menuPanel.setVisible(false);
        
        switch(mode)
        {
            case 0:
            {
                single.start(this);
                break;
            }
            case 1:
            {
                multi.start(this);
                break;
            }
            case 2:
            {
                modeType=1;
                random=false;
                playAgain=false;
                swap=false;
                battle.start(this);
                break;
            }
        }
    }//GEN-LAST:event_startButtonActionPerformed
    
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        cards.clearLists();
        Players.clear();
        this.cardsPanel.removeAll();
        this.cardsPanel.setLayout(new GridLayout(1,0,0,0));
        this.cardsPanel.add(menuPanel);
        this.menuPanel.setVisible(true);
        this.botPanel.setVisible(false);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void GameComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GameComboboxActionPerformed
        this.swapCheckbox.setEnabled(GameCombobox.getSelectedIndex()<2);
    }//GEN-LAST:event_GameComboboxActionPerformed

    private void SMBComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SMBComboboxActionPerformed
        if(this.SMBCombobox.getSelectedIndex()==0)
        {
            this.GameCombobox.setVisible(true);
            this.swapCheckbox.setVisible(true);
            this.orderCheckbox.setVisible(true);
            this.randomCheckbox.setVisible(true);
            this.extraMenus.setVisible(false);
        }
        else if(this.SMBCombobox.getSelectedIndex()==1)
        {
            this.GameCombobox.setVisible(true);
            this.swapCheckbox.setVisible(true);
            this.orderCheckbox.setVisible(true);
            this.randomCheckbox.setVisible(true);
            this.playAgainCheckBox.setVisible(true);
            this.player3ComboBox.setVisible(true);
            this.player4ComboBox.setVisible(true);
            this.extraMenus.setVisible(true);
        }
        else if(this.SMBCombobox.getSelectedIndex()==2)
        {
            this.GameCombobox.setVisible(false);
            this.extraMenus.setVisible(true);
            this.swapCheckbox.setVisible(false);
            this.orderCheckbox.setVisible(false);
            this.randomCheckbox.setVisible(false);
            this.playAgainCheckBox.setVisible(false);
            this.player3ComboBox.setSelectedIndex(0);
            this.player4ComboBox.setSelectedIndex(0);
            this.player3ComboBox.setVisible(false);
            this.player4ComboBox.setVisible(false);
        }
        
    }//GEN-LAST:event_SMBComboboxActionPerformed

    private void nextPlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPlayerButtonActionPerformed
        cards.hideCoverShownCards(false);
        multi.moveMade(false);
    }//GEN-LAST:event_nextPlayerButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> GameCombobox;
    private javax.swing.JComboBox<String> SMBCombobox;
    public static javax.swing.JPanel botPanel;
    public static javax.swing.JPanel cardsPanel;
    public static javax.swing.JLabel countMovesLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel extraMenus;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JPanel menuPanel;
    public static javax.swing.JLabel movesLabel;
    private javax.swing.JButton nextPlayerButton;
    private javax.swing.JCheckBox orderCheckbox;
    private javax.swing.JCheckBox playAgainCheckBox;
    private javax.swing.JComboBox<String> player1ComboBox;
    public static javax.swing.JLabel player1Correct;
    public static javax.swing.JLabel player1Count;
    public static javax.swing.JLabel player1Label;
    public static javax.swing.JLabel player1Type;
    private javax.swing.JComboBox<String> player2ComboBox;
    public static javax.swing.JLabel player2Correct;
    public static javax.swing.JLabel player2Count;
    public static javax.swing.JLabel player2Label;
    public static javax.swing.JLabel player2Type;
    private javax.swing.JComboBox<String> player3ComboBox;
    public static javax.swing.JLabel player3Correct;
    public static javax.swing.JLabel player3Count;
    public static javax.swing.JLabel player3Label;
    public static javax.swing.JLabel player3Type;
    private javax.swing.JComboBox<String> player4ComboBox;
    public static javax.swing.JLabel player4Correct;
    public static javax.swing.JLabel player4Count;
    public static javax.swing.JLabel player4Label;
    public static javax.swing.JLabel player4Type;
    public static javax.swing.JPanel playersPanel;
    private javax.swing.JCheckBox randomCheckbox;
    private javax.swing.JButton startButton;
    private javax.swing.JCheckBox swapCheckbox;
    // End of variables declaration//GEN-END:variables
}
